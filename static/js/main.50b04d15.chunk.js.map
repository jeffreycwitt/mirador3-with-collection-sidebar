{"version":3,"sources":["CollectionListItem.js","SidePanel.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["CollectionListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelectCollection","bind","assertThisInitialized","handleOnFilterChange","handleClearAll","handleSelectAll","state","collections","label","open","filter","manifests","_this2","forEach","m","store","dispatch","actions","_this3","e","console","log","target","value","setState","_this4","Axios","get","id","then","res","data","prevState","catch","error","_this5","indent","level","react_default","a","createElement","onClick","className","style","padding-left","Input_default","placeholder","onChange","margin-left","Button_default","color","alt","SelectAll_default","ClearAll_default","displayManifestsButton","map","c","includes","key","Component","SidePanel","classes","sideBarMinimized","handleToggleMinimize","src_CollectionListItem","Close_default","App","createStore","settings","src_SidePanel","es","containers_App_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.50b04d15.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport * as actions from 'mirador/dist/es/src/state/actions';\nimport ClearAll from '@material-ui/icons/ClearAll';\nimport SelectAll from '@material-ui/icons/SelectAll';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\n\n\nclass CollectionListItem extends Component {\n  constructor(props){\n    super(props)\n    this.handleSelectCollection = this.handleSelectCollection.bind(this)\n    this.handleOnFilterChange = this.handleOnFilterChange.bind(this)\n    this.handleClearAll = this.handleClearAll.bind(this)\n    this.handleSelectAll = this.handleSelectAll.bind(this)\n    this.state = {\n      collections: [],\n      label: \"\",\n      open: false,\n      filter: \"\",\n      manifests: false\n    }\n  }\n  handleClearAll(){\n  this.state.collections.forEach((m) => {\n    this.props.store.dispatch(actions.removeManifest(m[\"@id\"]))\n    });\n  }\n  handleSelectAll(){\n     this.state.collections.forEach((m) => {\n       this.props.store.dispatch(actions.fetchManifest(m[\"@id\"]))\n    });\n    this.props.store.dispatch(actions.setWorkspaceAddVisibility(true))\n  }\n  handleOnFilterChange(e){\n    console.log(\"change value\" + e.target.value)\n    this.setState({filter: e.target.value})\n  }\n  handleSelectCollection(){\n    if (!this.state.open){\n      Axios.get(this.props.id).then((res) => {\n        console.log(\"res\", res)\n        if (res.data.collections){\n          console.log(res.data)\n          this.setState({collections: res.data.collections, label: res.data.label, open: true});\n        }\n        else if (res.data.manifests){\n          this.setState((prevState) => {\n            return(\n              {\n                collections: res.data.manifests,\n                label: res.data.label,\n                open: true,\n                manifests: true\n\n              }\n            )\n          });\n        }\n        else if (res.data[\"@type\"] === \"sc:Manifest\"){\n          this.props.store.dispatch(actions.fetchManifest(this.props.id))\n        }\n      })\n      .catch(error => console.log(error));\n      this.props.store.dispatch(actions.setWorkspaceAddVisibility(true))\n    }\n    else{\n      this.setState({\n        collections: [],\n        label: \"\",\n        open: false\n      })\n    }\n  }\n  render() {\n    const displayCollections = () => {\n      const displayArray = this.state.collections.map((c) => {\n        if (this.state.filter){\n          if (c.label.includes(this.state.filter)){\n            return <CollectionListItem key={c[\"@id\"]} label={c.label} id={c[\"@id\"]} store={this.props.store} level={this.props.level + 1} filter={this.state.filter}/>\n          }\n        }\n        else{\n          return <CollectionListItem key={c[\"@id\"]} label={c.label} id={c[\"@id\"]} store={this.props.store} level={this.props.level + 1} filter={this.state.filter}/>\n        }\n\n      });\n      return displayArray\n    }\n    const indent = this.props.level * 10;\n    const displayManifestsButton = () =>  {\n      if (this.state.manifests){\n        return(\n          <p style={{\"margin-left\": indent + \"px\"}}>\n          <Button onClick={this.handleSelectAll} color=\"primary\" alt=\"select all\"><SelectAll/></Button>\n          <Button onClick={this.handleClearAll} color=\"primary\" alt=\"clear all\"><ClearAll/></Button>\n          </p>\n        )\n      }\n    }\n\n\n    return (\n      <div>\n\n        <p onClick={this.handleSelectCollection} className=\"collection-list-item\" style={{\"padding-left\": indent + \"px\"}}>{this.props.label} </p>\n\n        {this.state.open && <Input placeholder=\"filter\" onChange={this.handleOnFilterChange} style={{\"margin-left\": indent + \"px\"}}/> }\n        {this.state.open && displayManifestsButton()}\n\n\n\n        {displayCollections()}\n      </div>\n    );\n  }\n}\n\nexport default CollectionListItem;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport CollectionListItem from './CollectionListItem';\n//import BreadCrumbListItem from './BreadCrumbListitem';\nimport * as actions from 'mirador/dist/es/src/state/actions';\nimport Icon from '@material-ui/core/Icon';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Close from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\n\n\nclass SidePanel extends Component {\n  constructor(props){\n    super(props)\n  }\n  render() {\n    const classes = this.props.sideBarMinimized ? \"sideBarMinimized sidepanel\" : \"sidepanel\"\n    const displaySideBar = () => {\n      if (this.props.sideBarMinimized){\n        return(\n          <div className={classes} onClick={this.props.handleToggleMinimize}>\n          <CollectionListItem key=\"side-panel\" label=\"SCTA Authors\" id=\"https://scta.info/iiif/authors/collection\" store={this.props.store} level={1}/>\n          </div>\n        )\n      }\n      else{\n        return(\n          <div className={classes}>\n          <div className=\"close-button\">\n          <Button onClick={this.props.handleToggleMinimize} color=\"primary\"><Close/></Button>\n          </div>\n\n\n            <CollectionListItem key=\"side-panel\" label=\"SCTA Authors\" id=\"https://scta.info/iiif/authors/collection\" store={this.props.store} level={1}/>\n          </div>\n        )\n      }\n    }\n    return (\n      displaySideBar()\n    );\n  }\n}\n\nexport default SidePanel;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport MiradorApp from 'mirador/dist/es/src/containers/App';\nimport settings from 'mirador/dist/es/src/config/settings';\nimport * as actions from 'mirador/dist/es/src/state/actions';\nimport createStore from 'mirador/dist/es/src/state/createStore';\nimport { CanvasThumbnail } from 'mirador/dist/es/src/components/CanvasThumbnail'\nimport SidePanel from './SidePanel'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.handleToggleMinimize = this.handleToggleMinimize.bind(this)\n    this.state = {\n      sideBarMinimized: false,\n\n    }\n  }\n  componentWillMount(){\n      const store = createStore();\n      settings.id = \"yolo\";\n      store.dispatch(actions.setConfig(settings));\n      store.dispatch(actions.setWorkspaceAddVisibility(true))\n      this.setState({store: store})\n  }\n  handleToggleMinimize(){\n    this.setState({sideBarMinimized: !this.state.sideBarMinimized})\n  }\n\n  render() {\n\n    const classes = this.state.sideBarMinimized ? \"miradorSideBarMinimized mirador\" : \"mirador\"\n    return (\n      <div id=\"App\">\n      <SidePanel store={this.state.store} sideBarMinimized={this.state.sideBarMinimized} handleToggleMinimize={this.handleToggleMinimize}/>\n        <div className={classes}>\n          <Provider store={this.state.store}>\n            <MiradorApp />\n          </Provider>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}